GPG_TTY='tty'
export GPG_TTY

SAVEHIST=50000
HISTSIZE=50000
export DEBEMAIL=dpat@syn-net.org

if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

[ -e /usr/share/autojump/autojump.sh ] && . /usr/share/autojump/autojump.sh

# https://github.com/rupa/z
[ -e "$HOME/bin/z.sh" ] && . "$HOME/bin/z.sh"

# If a new command line being added to the history list duplicates an older
# one, the older command is NOT removed from the list
# OVERRIDE setting of .zshrc
unsetopt histignorealldups

[ -x "/usr/bin/gnome-open" ] && alias o="/usr/bin/gnome-open"
[ -x "/usr/bin/xdg-open" ] && alias o="/usr/bin/xdg-open"
alias d="dirs -v"
alias cdgitroot='cd $(git rev-parse --show-toplevel)'
alias odt2pdf="libreoffice --headless --convert-to pdf"
alias cdp2s="cd ~/Projects/spc/avl/AVL\ WBT\ Processes2Success/"
alias pull="git pull --rebase origin master"
alias push="git push origin master"
alias status="git status"
alias gdiff="git diff"
alias gplog="git log @{1}..HEAD"
alias git='noglob git' # prevent 'git show HEAD^' causing errors
function lsshot() { command ls --color=auto -rtlh ~/Pictures/screenshots/*(D.om[1,${1:-10}]) }
function cpshot() { command cp ~/Pictures/screenshots/*(D.om[1,${1:-1}]) . }
alias ls='command ls --color=auto'
alias sdig='dig +noall +answer'
alias lstcp='sudo lsof -iTCP -sTCP:LISTEN -n -P'

bindkey "^Xa" _expand_alias
zstyle ':completion:*' completer _expand_alias _complete _ignored
zstyle ':completion:*' regular true

# ansible ara functions
function ara_playbooks() { ara playbook list --limit ${1:=10} }
function ara_playbooks_checkrun() { ara playbook list --label "check:True" --limit ${1:=10} }
function ara_playbooks_fullrun() { ara playbook list --label "check:True" --limit ${1:=10} }
function ara_last() { ara playbook list --limit 1 -c id -f value }
function ara_hosts_changed() { ara result list --playbook $1 --limit 100 --resolve -c id -c host --changed }
function ara_hosts_failed() { ara result list --playbook $1 --limit 100 --resolve -c id -c host --status failed }
function ara_tasks_changed() { ara result list --playbook $1 -limit 0 --resolve --changed --status ok -c id -c task -c host }
function ara_tasks_failed() { ara result list --playbook $1 --limit 100 --resolve --status failed -c id -c task -c host }
function ara_task_diff() { TASK_ID=$1; echo "dest: $(ara result show --with-content -f json $TASK_ID | jq ".content.dest")"; diff -u <(ara result show $TASK_ID -f json --with-content | jq ".content.diff[].before" -r) <(ara result show $TASK_ID -f json --with-content | jq ".content.diff[].after" -r) }
function ara_task_contentmsg() { ara result show --with-content -f json $1 | jq .content.msg }

# Disabled unhappy smiley:
# zstyle ':prompt:grml:right:setup' use-rprompt false

# In .zshrc we have an array called abk where some shortcuts are defined which can be
# expanded by pressing 'CTRL-x .' On how to expand an item to an array, see: https://stackoverflow.com/a/37391847

abk+=("shot" "~/Pictures/screenshots/screenshot_") # expand to screenshots
abk+=("SC" "~/Pictures/screenshots/*(D.om[1])") # show last modified file in that dir (= last taken screenshot)
abk+=("TRIM" "| awk '{ \$1=\$1; print }'" ) # trim leading and trailing whitespace of an output, see: https://unix.stackexchange.com/a/205854

# copy and paste to clipboard, see: https://superuser.com/a/288333 (Tipp by Ulrich Dangel)
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'

# press "ctrl-x D" to insert the actual date in the form yyyymmdd
function insert-datestamp2 () { LBUFFER+=${(%):-'%D{%Y%m%d}'}; }
zle -N insert-datestamp2
bind2maps emacs viins       -- -s '^xD' insert-datestamp2

if [ -d ~/projects ]; then
  PROJECTDIR=$(print -lr ~/projects)
elif [ -d ~/Projects ]; then
  PROJECTDIR=$(print -lr ~/Projects)
fi

# http://www.cyberciti.biz/faq/how-to-find-my-public-ip-address-from-command-line-on-a-linux/
# alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
# http://askubuntu.com/a/95911
alias myip2="wget http://ipinfo.io/ip -qO -"

function synpro-prompt() {
  if ! grml_theme_has_token greendatetime; then
    grml_theme_add_token greendatetime '%D{%Y-%m-%d} %D{%H:%M:%S %Z} ' '%F{green}' ''
  fi
  zstyle ':prompt:grml:left:setup' items rc greendatetime change-root user at host path percent vcs
  zstyle ':prompt:grml:right:setup' items history sad-smiley
}

# sorted disk usage
function dus(){
  if [ -z ${1} ]; then
    sudo du -cs * | sort -n
  else
    sudo du -cs "$@" | sort -n
  fi
}

# https://twitter.com/climagic/status/551435572490010624
function mirror(){ mplayer -vf mirror -v tv:// -tv device=/dev/video0:driver=v4l2; }

# http://superuser.com/a/901510/225775
function shrinkpdf() {
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$2 $1
}

function quicktimebase() {
	FILE=$(wget "$1" -O - -o /dev/null | cut -c 45- | sed -e "s/\(^.*mov\).*/\1/")
	BASE=$(echo "$1" | sed -e "s_\(^.*/\).*_\1_")
}

function qlink() {
	quicktimebase $1
	echo "${BASE}${FILE}"
}

function uuget() {
	quicktimebase $1
        uget-gtk --quiet --http-user-agent="QuickTime/7.6.2" --category-index=1 "${BASE}${FILE}"
}

function qqget() {
	quicktimebase $1
    wget -c -U "QuickTime/7.6.2" "${BASE}${FILE}"
}

function qget() {
    wget -c -U "QuickTime/7.6.2" $1
}

# Poor mans Humble Book Bundle downloader: Use the saved html file as parameter and alls PDFs and epubs will be downloaded
function humbleget() {
    grep -e epub -e pdf "$1" | sed -e 's/^.*href="\(.*\)".*/\1/' | recode html..ascii | aria2c -i -
}

# git help functions
#
# Review git history via vim
function glog () {
  noglob git log -p -40 $1 | vim - -R -c 'set foldmethod=syntax'
}

function pyexcel-wrapper() {
	pyexcel diff "$2" "$5"
}

function dont_sleep() {
	if [[ $1 == "on" ]]; then
		gsettings set org.gnome.desktop.session idle-delay 0
		gsettings set org.gnome.settings-daemon.plugins.power sleep-display-ac 0
		gsettings set org.gnome.settings-daemon.plugins.power sleep-display-battery 0
	elif [[ $1 == "off" ]]; then
		gsettings set org.gnome.desktop.session idle-delay 120
		gsettings set org.gnome.settings-daemon.plugins.power sleep-display-ac 300
		gsettings set org.gnome.settings-daemon.plugins.power sleep-display-battery 120
	fi
	if [[ -n $2 ]]; then
		at +${2}min dont_sleep off
	fi
}

function youtube2mp3() {
	if [[ -z $1 ]]; then
			return 1
	fi
	TITLE=$(youtube-dl -e $1)
	youtube-dl $1 -o - | ffmpeg -i - -b:a 192k "${TITLE/\//-}.mp3"
}

function qrdisplay() {
	if [[ -z $1 ]]; then
		echo $(xclip -o) | qrencode -o - | display
	else
		qrencode "$1" -o - | display
	fi
}

# https://coderwall.com/p/_s_xda/fix-ssh-agent-in-reattached-tmux-session-shells
fixssh() {
	for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
		if (tmux show-environment | grep "^${key}" > /dev/null); then
			value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
			export ${key}="${value}"
		fi
	done
}

if [ -n "${PROJECTDIR}" ]; then
  hash -d synpro=${PROJECTDIR}/synpro
  hash -d synnet=${PROJECTDIR}/synnet
  hash -d proj=${PROJECTDIR}

  if [ -e "${PROJECTDIR}/scripts/todo.sh" ] && [ -e "${HOME}/.todo/todo.cfg" ]; then
    function t(){ "${PROJECTDIR}/scripts/todo.sh" -d "${HOME}/.todo/todo.cfg" $@; }
    alias tmm="${PROJECTDIR}/scripts/todo.sh -d ${HOME}/.todo/todo_music-movies.cfg"
    alias tmu="${PROJECTDIR}/scripts/todo.sh -d ${HOME}/.todo/todo_music-movies.cfg list +music"
    alias tmo="${PROJECTDIR}/scripts/todo.sh -d ${HOME}/.todo/todo_music-movies.cfg list +movies"
    # t list
  fi
fi

export GEM_HOME="$HOME/.local/share/gem"
export GEM_PATH="$GEM_HOME/bin"
export PATH=$PATH":$GEM_PATH"

# host completion
if is42 ; then
    [[ -r ~/.ssh/config ]] && _ssh_config_hosts=(${${(s: :)${(ps:\t:)${${(@M)${(f)"$(<$HOME/.ssh/config)"}:#Host *}#Host }}}:#*[*?]*}) || _ssh_config_hosts=()
    # customized:
    setopt +o nomatch
    if ls ~/.ssh/known_hosts_* >/dev/null 2>&1 ; then
      for file in ~/.ssh/known_hosts_*~*old ; _ssh_hosts=($_ssh_hosts ${${${${(f)"$(<$file)"}:#[\|]*}%%\ *}%%,*})
    else
      _ssh_hosts=()
    fi
    unsetopt +o nomatch
    [[ -r /etc/hosts ]] && : ${(A)_etc_hosts:=${(s: :)${(ps:\t:)${${(f)~~"$(</etc/hosts)"}%%\#*}##[:blank:]#[^[:blank:]]#}}} || _etc_hosts=()
else
    _ssh_config_hosts=()
    _ssh_hosts=()
    _etc_hosts=()
fi
hosts=(
    $(hostname)
    "$_ssh_config_hosts[@]"
    "$_ssh_hosts[@]"
    "$_etc_hosts[@]"
    localhost
)
zstyle ':completion:*:hosts' hosts $hosts

if [ -e "/usr/local/bin/starship" ]; then
  prompt restore
  eval "$(starship init zsh)"
fi

# vim:ts=4:
#
